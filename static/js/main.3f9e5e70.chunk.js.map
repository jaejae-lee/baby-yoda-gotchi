{"version":3,"sources":["components/Game/yodaNoise.mp3","components/Header/Header.js","components/Settings/Settings.js","axios.js","Actions/state.js","components/Settings/index.js","Actions/api.js","components/Footer/Footer.js","components/Homepage/Homepage.js","components/Homepage/index.js","components/Game/Game.js","components/Game/index.js","components/GameWrapper/GameWrapper.js","components/EndScreen/EndScreen.js","components/EndScreen/index.js","components/EndScreenWrapper/EndScreenWrapper.js","App/App.js","App/index.js","data/initial.js","data/reducer.js","index.js"],"names":["module","exports","Header","className","Settings","props","state","name","color","colorPickError","namePickError","handleChangeName","bind","handleChangeColor","handleSubmit","handleFindYoda","e","this","setState","currentTarget","value","hex","preventDefault","createYoda","colour","findYoda","errors","Form","onSubmit","Group","Label","Control","type","onChange","length","style","display","onChangeComplete","Button","variant","onClick","Component","axios","create","baseURL","headers","createError","data","console","log","error","connect","dispatch","settings","post","then","postYoda","get","id","dob","last_fed","latest_feed","loadYoda","getYodaByName","Footer","href","Homepage","submitted","noise","UIfx","mp3File","Game","intervalHealth","intervalAge","handleClick","setInterval","updateAge","updateHealth","clearInterval","setVolume","play","feedClick","age","health","startAge","days","Math","floor","hrs","mnts","displayAge","Fragment","backgroundColor","borderTopColor","ProgressBar","animated","now","alive","getState","yoda_id","feed_data","fed_at","feedYoda","time","Date","GameWrapper","EndScreen","deleteAndReset","delete","EndScreenWrapper","App","initial","reducer","action","saveYoda","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f9e5e70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yodaNoise.3fa8d3cb.mp3\";","import React from \"react\";\n\nconst Header = () => (\n     <header className=\"page-header p-5\">\n          <h1>Baby-Yoda-Gotchi</h1>\n     </header>\n);\n\nexport default Header;","import React, { Component } from \"react\";\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { CirclePicker } from 'react-color';\n\nclass Settings extends Component {\n\n     constructor(props) {\n          super(props);\n\n          this.state = { \n               name: props.name,\n               color: props.color,\n               colorPickError: false,\n               namePickError: false\n          };\n\n          this.handleChangeName = this.handleChangeName.bind(this);\n          this.handleChangeColor = this.handleChangeColor.bind(this);\n          this.handleSubmit = this.handleSubmit.bind(this);   \n          this.handleFindYoda = this.handleFindYoda.bind(this);    \n \n     }\n\n     handleChangeName(e) {\n          this.setState({ name: e.currentTarget.value });\n     }\n\n     handleChangeColor(color){\n          this.setState({ color: color.hex });\n     };\n\n     handleSubmit(e){\n          e.preventDefault();\n         \n          if (this.state.name !== \"\"){\n               this.setState({namePickError: false})\n          }\n          if (this.state.color !== \"\"){\n               this.setState({colorPickError: false})\n          }\n          if (this.state.name === \"\"){\n               this.setState({namePickError: true})\n          }\n          if (this.state.color === \"\"){\n               this.setState({colorPickError: true})\n          } else {\n               this.props.createYoda(this.state);\n          \n               this.setState({\n                    name: \"\",\n                    colour: \"\",\n               });\n          }\n     }\n\n     handleFindYoda(){\n\n          let { findYoda } = this.props;\n          \n          findYoda(this.state.name);\n\n          this.setState({\n               name: \"\",\n          });\n     }\n\n     render() {\n          let { errors } = this.props;\n          return (\n               <Form \n                    className=\"container p-5\"\n                    onSubmit={ this.handleSubmit }\n               >\n                    <Form.Group className=\"row justify-content-center mb-5\">\n                         <Form.Label className=\"col-12\"><p>Name:</p></Form.Label>\n                         <Form.Control\n                              type=\"text\"\n                              className=\"col-8 bg-dark text-warning\"\n                              value={ this.state.name } \n                              onChange={ this.handleChangeName } \n                         >\n                         </Form.Control>\n                         <p>{ errors[errors.length - 1] }</p>\n                         \n                    </Form.Group>\n                    <p style={{ display: this.state.namePickError ? \"block\" : \"none\"}}>\n                              Please pick a name!\n                    </p>\n\n                    <Form.Group className=\"row justify-content-center mb-5\">\n                         <Form.Label className=\"col-12\"><p>Colour:</p></Form.Label>\n                         <CirclePicker \n                              className=\"col-8 justify-content-center picker\"\n                              color={ this.state.color }\n                              onChangeComplete={ this.handleChangeColor }\n                              />\n                    </Form.Group>\n                         <p style={{ display: this.state.colorPickError ? \"block\" : \"none\"}}>\n                              Please pick a colour!\n                         </p>\n               \n                    <Button \n                         type=\"submit\"\n                         className=\"m-1\" \n                         variant=\"outline-warning\"\n                    >CREATE YODA</Button>\n          \n                    <Button \n                         onClick={ this.handleFindYoda }\n                         className=\"m-1\" \n                         variant=\"outline-warning\"\n                    >FIND MY YODA</Button>\n               </Form>\n          );\n     } \n};\n\nexport default Settings;","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://yoda.developme.space/api/baby_yoda\",\n    \n    headers: {\"Accept\": \"application/json\"}\n});","export const createYoda = (settings) => {\n    return {\n        type: \"createYoda\",\n        settings: settings\n    };\n};\n\nexport const feedYoda = (data) => {\n    return {\n        type: \"feedYoda\",\n        feed_data: data.data.fed_at\n    };\n};\n\nexport const updateAge = () => {\n \n    return {\n        type: \"updateAge\",\n        time: Math.floor(Date.now() / 1000) \n    };\n};\n\nexport const createError = (data) => {\n    console.log(data);\n    return {\n        type: \"createError\",\n        error: data\n    };\n};\n\nexport const updateHealth = () => {\n\n    return {\n        type: \"updateHealth\",\n    };\n};\n\nexport const loadYoda = (data) => {\n\n    return {\n        type: \"loadYoda\",\n        id: data.data.id,\n        name: data.data.name,\n        color: data.data.colour,\n        dob: data.data.dob, \n        last_fed: data.data.latest_feed\n    };\n};\n\nexport const resetGame = () => {\n\n    return {\n        type: \"resetGame\"\n    };\n};\n","import { connect } from 'react-redux';\nimport Settings from './Settings';\nimport { postYoda, getYodaByName } from '../../Actions/api';\n\nconst mapStateToProps = state => {\n    return {\n        name: state.name,\n        color: state.color,\n        errors: state.errors\n    };\n};\n\nconst mapDispatchtoProps = dispatch => {\n    return{\n        createYoda: settings => dispatch(postYoda(settings)),\n        findYoda: name => dispatch(getYodaByName(name))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Settings);","import axios from '../axios';\nimport { createYoda, feedYoda, createError, loadYoda, resetGame } from './state';\n\nexport const postYoda = (settings) => dispatch => {\n\n    axios.post('', {\n        name: settings.name,\n        colour: settings.color\n    }).then(({ data }) => {\n        if(data.error){\n            dispatch(createError(data.error));\n        }else{\n            dispatch(createYoda(data.data));\n        }\n    });\n}\n\nexport const postFeed = () => (dispatch, getState) => {\n\n    const yoda_id = getState().yoda_id;\n\n    axios.post(`/${ yoda_id }/feed`).then(({ data }) => {\n        dispatch(feedYoda(data));\n    });\n}\n\nexport const getYodaByName = (name) => dispatch => {\n\n    axios.get(`/find/${ name }`).then(({ data }) => {\n        if(data.error){\n            dispatch(createError(data.error));\n        } else {\n            dispatch(loadYoda(data));\n        }\n    });\n}\n\nexport const deleteYoda = () => (dispatch, getState) => {\n\n    const yoda_id = getState().yoda_id;\n\n    axios.delete(`/${ yoda_id }`).then(() => {\n        dispatch(resetGame());\n    });\n\n}\n","import React from \"react\";\n\nconst Footer = () => (\n     <footer className=\"page-footer\">\n          <p> Created by Team Can-do-lorians 2019.<br/> All rights to Star Wars and the 'Baby Yoda' character owned by Disney.<br/> Character facial animation based on <a href=\"https://codepen.io/shshaw/pen/QWwyaNR\">CSS animation </a>by Shaw.</p>\n     </footer>\n);\n\nexport default Footer;","import React from \"react\";\nimport Header from \"../Header/Header\";\nimport Settings from \"../Settings/index\";\nimport Footer from \"../Footer/Footer\";\n\nconst Homepage = ( submitted ) => (\n     <>\n          <Header />\n          <Settings />\n          <Footer />\n     </>\n);\n\nexport default Homepage;","import Homepage from './Homepage';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        submitted: state.submitted\n    };\n};\n\nexport default connect(mapStateToProps)(Homepage);","import React, { Component } from \"react\";\nimport { ProgressBar } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport '../../yoda.css';\nimport UIfx from 'uifx';\nimport mp3File from './yodaNoise.mp3';\n\nconst noise = new UIfx(mp3File);\n\nclass Game extends Component {\n\n     constructor(props){\n          super(props);\n          this.handleClick=this.handleClick.bind(this);\n     }\n\n     intervalHealth = 0;\n     intervalAge = 0;\n\n     componentDidMount(){\n          this.intervalAge = setInterval(() => (this.props.updateAge()), 1000);\n          this.intervalHealth = setInterval(() => (this.props.updateHealth()), 1000);\n     }\n\n     componentWillUnmount() {\n          clearInterval(this.intervalHealth);\n          clearInterval(this.intervalAge);\n     }\n\n     handleClick() {\n          noise.setVolume(1.0).play();\n          this.props.feedClick();\n     }\n\n     render() { \n     let { name, color, age, health } = this.props;\n\n     let startAge = age;\n\n     let days = Math.floor(startAge / (3600*24));\n     startAge  -= days*3600*24;\n     let hrs   = Math.floor(startAge / 3600);\n     startAge  -= hrs*3600;\n     let mnts = Math.floor(startAge / 60);\n     startAge  -= mnts*60;\n     let displayAge = (days+\" days, \"+hrs+\" hrs, \"+mnts+\" minutes, \"+startAge+\" seconds\");\n\n          return ( \n               <React.Fragment>\n                    <div className=\"content\">\n                         <h1>Baby { name }</h1>\n                         <div className=\"gamebox\">\n                              <div \n                                   className=\"baby-yoda\"\n                                   style={{\n                                        backgroundColor: color,\n                                        borderTopColor: color,\n                                   }}\n                              ></div>\n                              <div className=\"robe\">\n                                   <div \n                                   className=\"handOne\"\n                                   style={{\n                                        backgroundColor: color,\n                                   }}\n                                   ></div>\n                                   <div \n                                   className=\"handTwo\"\n                                   style={{\n                                        backgroundColor: color,\n                                   }}\n                                   ></div>\n                                   <div className=\"cup\"></div>\n                              </div>                         \n                         </div>\n                         <div className=\"game-controls\">\n                              <h3>Age: { displayAge }</h3>\n                         </div>\n                         <div className=\"game-controls\">\n                              <p>Health: { health }%</p>\n                              <ProgressBar className=\"m-3\" variant=\"danger\" animated now={ health } />\n                              <Button \n                                   className=\"m-3 buttonFeed\" \n                                   variant=\"outline-warning\"\n                                   onClick={ this.handleClick }\n                              >Feed Baby { name }</Button>\n                         </div>\n                    </div>\n               </React.Fragment>\n          );\n     }\n}\n \nexport default Game;","import { connect } from 'react-redux';\nimport Game from './Game';\nimport { updateAge, updateHealth } from '../../Actions/state';\nimport { postFeed } from '../../Actions/api';\n\nconst mapStateToProps = state => {\n    return {\n        name: state.name,\n        color: state.color,\n        age: state.age,\n        health: state.health,\n        alive: state.alive,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        feedClick: () => dispatch(postFeed()),\n        updateAge: () => dispatch(updateAge()),\n        updateHealth: () => dispatch(updateHealth())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React from 'react';\n\nimport Game from '../Game';\nimport Footer from '../Footer/Footer';\n\nconst GameWrapper = () => (\n    <>\n        <Game/>\n        <Footer/>\n    </>\n);\n\nexport default GameWrapper;","import React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\n\nclass EndScreen extends Component {\n     constructor(props){\n          super(props)\n\n          this.handleClick = this.handleClick.bind(this);\n     }\n\n     handleClick(){\n          this.props.deleteAndReset();\n     }\n\n     render() {\n          let { name } = this.props;\n          return (\n               <div className=\"gameOver\">\n                    <h1 className=\"text-warning death-text\"> Baby { name } has gone to a galaxy far, far away....</h1>\n                    <Button \n                         onClick={ this.handleClick }\n                         className=\"mt-5 p-3\" \n                         variant=\"outline-warning\"\n                    >Return { name } to the Force</Button>\n               </div>\n          );\n     } \n};\n\nexport default EndScreen;","import { connect } from 'react-redux';\nimport EndScreen from './EndScreen';\nimport { deleteYoda } from '../../Actions/api';\n\nconst mapStateToProps = state => {\n    return{\n        name: state.name\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        deleteAndReset: () => dispatch(deleteYoda()),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EndScreen);","import React from 'react';\n\nimport EndScreen from '../EndScreen';\nimport Footer from '../Footer/Footer';\n\nconst EndScreenWrapper = () => (\n    <>\n        <EndScreen/>\n        <Footer/>\n    </>\n);\n\nexport default EndScreenWrapper;","import React from \"react\";\nimport Homepage from \"../components/Homepage\";\nimport GameWrapper from \"../components/GameWrapper/GameWrapper\";\nimport EndScreenWrapper from \"../components/EndScreenWrapper/EndScreenWrapper\";\n\nconst App = ({ submitted, alive } ) => (\n\n     <>\n          { submitted ? ( alive ? <GameWrapper/> : <EndScreenWrapper/>) : <Homepage/> }\n     </>\n);\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\n\nconst mapStateToProps = state => {\n    return {\n       submitted: state.submitted,\n       alive: state.alive,\n    };\n};\n\nexport default connect(mapStateToProps, null)(App);","const initial = {\n    name: '',\n    color: '',\n    age: 0,\n    health: 0,\n    submitted: false,\n    yoda_id: 0,\n    last_fed: 0,\n    dob: 0,\n    alive: true,\n    errors: []\n}\n\nexport default initial;","import initial from './initial';\n\nconst secsPerHealthLoss = 480;\n\nconst saveYoda = (state, action) => ({\n    ...state,\n    name: action.settings.name,\n    color: action.settings.colour,\n    submitted: true,\n    yoda_id: action.settings.id,\n    dob: action.settings.dob,\n    last_fed: Math.floor(Date.now() / 1000),\n    health: 100\n});\n\nconst feedYoda = (state, action) => ({\n    ...state, \n    last_fed: action.feed_data,\n    health: 100\n});\n\nconst updateAge = (state, action) => {\n    \n    return {\n        ...state, \n        age: action.time - state.dob\n    };\n};\n\nconst updateHealth = (state) => {\n\n    return {\n        ...state, \n        health: 100 - Math.floor(((Math.floor(Date.now() / 1000)) - state.last_fed) /secsPerHealthLoss),\n        alive: state.health <= 0 ? false : true,\n    };\n};\n\nconst createError = (state, action) => {\n\n    return {\n        ...state, \n        errors: [...state.errors, action.error]\n    };\n};\n\nconst loadYoda = (state, action) => {\n\n    if ((100 - Math.floor(((Math.floor(Date.now() / 1000)) - (action.last_fed > 0 ? action.last_fed : action.dob)) / secsPerHealthLoss)) < 0){\n        return{\n            ...state,\n            alive: false,\n            submitted: true,\n            yoda_id: action.id,\n            name: action.name\n        };\n    } else {\n        return {\n            ...state,\n            yoda_id: action.id,\n            name: action.name,\n            color: action.color,\n            submitted: true,\n            dob: action.dob, \n            last_fed: action.last_fed > 0 ? action.last_fed : action.dob,\n            health: 100 - Math.floor(((Math.floor(Date.now() / 1000)) - (action.last_fed > 0 ? action.last_fed : action.dob)) /secsPerHealthLoss),\n            age: Math.floor((Math.floor(Date.now() / 1000) - action.dob)),\n        };\n    };\n};\n\nconst resetGame = (initial) => {\n    return {\n        ...initial\n    };\n};\n\nconst reducer = (state, action) => {\n    switch (action.type){\n\n         case \"createYoda\": return saveYoda(state, action);\n         case \"feedYoda\": return updateHealth(feedYoda(state, action));\n         case \"updateAge\": return updateAge(state, action);\n         case \"updateHealth\": return updateHealth(state, action);\n         case \"createError\": return createError(state, action);\n         case \"loadYoda\": return loadYoda(state, action)  ;\n         case \"resetGame\": return resetGame(initial);\n\n         default: return state;\n    };\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\nimport initial from './data/initial';\nimport reducer from './data/reducer';\n\n\nconst composeEnhancers = \n     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n     reducer, \n     initial,\n     composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n     <Provider store={ store }>\n          <App/>\n     </Provider>,\n     document.getElementById(\"root\")\n);"],"sourceRoot":""}